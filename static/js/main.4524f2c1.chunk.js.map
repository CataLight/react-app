{"version":3,"sources":["errorImg.jpg","Components/SearchForm.js","Components/NavBar.js","Components/Photo.js","Components/SearchNotFound.js","Components/PhotoContainer.js","Components/NotFound.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchForm","state","value","onChange","e","_this","setState","target","submitSearch","preventDefault","props","search","path","history","push","currentTarget","reset","react_default","a","createElement","className","onSubmit","this","type","name","placeholder","required","fill","height","viewBox","width","xmlns","d","Component","withRouter","NavBar","react_router_dom","to","Photo","key","concat","id","src","url","alt","SearchNotFound","PhotoContainer","result","photo","length","results","map","Components_Photo","farm","server","secret","Components_SearchNotFound","NotFound","errorImg","App","data","cat","dog","rabbit","loading","performSearch","query","arguments","undefined","apiKey","axios","get","then","response","console","log","photos","catch","error","_this2","basename","Components_SearchForm","Components_NavBar","react_router","exact","render","Components_PhotoContainer","Components_NotFound","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4524f2c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/errorImg.dff0fa0a.jpg\";","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass SearchForm extends Component{\r\n\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    submitSearch = e => {\r\n        e.preventDefault();\r\n        this.props.search( this.state.value );\r\n        let path = this.state.value;\r\n        this.props.history.push(path);\r\n        \r\n        e.currentTarget.reset();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form className=\"search-form\" onSubmit={ this.submitSearch }>\r\n                <input type=\"search\" name=\"search\" placeholder=\"Search\" onChange={ this.onChange } required/>\r\n                <button type=\"submit\" className=\"search-button\">\r\n                <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\r\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                </svg>\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchForm);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return(\r\n        <nav className=\"main-nav\">\r\n        <ul>\r\n          <li><NavLink to='../cats'>Cats</NavLink></li>\r\n          <li><NavLink to='../dogs'>Dogs</NavLink></li>\r\n          <li><NavLink to='../rabbit'>Rabbit</NavLink></li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst Photo = (props) => {\r\n\r\n    return(\r\n        <li key={`${props.id}`}>\r\n            <img src={`${props.url}`} alt=\"\" />\r\n        </li>\r\n    );\r\n}   \r\n\r\nexport default Photo;","import React from 'react';\r\n\r\nconst SearchNotFound = () => {\r\n    return(\r\n        <li className=\"not-found\">\r\n            <h3>No Results Found</h3>\r\n            <p>You search did not return any results. Please try again.</p>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default SearchNotFound;","import React from 'react';\r\nimport Photo from './Photo';\r\nimport SearchNotFound from './SearchNotFound';\r\n\r\nconst PhotoContainer = props => {\r\n\r\n    const length = props.photo.length;\r\n    let result;\r\n\r\n    if( length > 0 ){\r\n        const results = props.photo;\r\n        if(results){\r\n            result = results.map( photo => {\r\n                return <Photo url={`https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`} key={photo.id} />\r\n            });\r\n        }\r\n    }\r\n\r\n    else{\r\n        result = <SearchNotFound />;\r\n    }\r\n\r\n    return(\r\n        <div className=\"photo-container\">\r\n            <h2>Results</h2>\r\n            <ul>\r\n                {result}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PhotoContainer;","import React from 'react';\r\nimport errorImg from '../errorImg.jpg';\r\n\r\nconst NotFound = () => {\r\n    return(\r\n        <img src={errorImg} alt='404 error' />\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport apiKey from \"./config\";\r\nimport SearchForm from \"./Components/SearchForm\";\r\nimport NavBar from \"./Components/NavBar\";\r\nimport PhotoContainer from \"./Components/PhotoContainer\";\r\nimport NotFound from \"./Components/NotFound\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        data: \"\",\r\n        cat: \"\",\r\n        dog: \"\",\r\n        rabbit: \"\",\r\n        loading: true,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.performSearch();\r\n\r\n        // axios\r\n        //     .get(\r\n        //         `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=cats&per_page=24&format=json&nojsoncallback=1`\r\n        //     )\r\n        //     .then((response) => {\r\n        //         // handle success\r\n        //         this.setState({\r\n        //             cat: response.data.photos.photo.map((photo) => photo),\r\n        //             loading: false,\r\n        //         });\r\n        //     })\r\n        //     .catch(function (error) {\r\n        //         // handle error\r\n        //         console.log(error);\r\n        //     });\r\n\r\n        // axios\r\n        //     .get(\r\n        //         `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=dogs&per_page=24&format=json&nojsoncallback=1`\r\n        //     )\r\n        //     .then((response) => {\r\n        //         // handle success\r\n        //         this.setState({\r\n        //             dog: response.data.photos.photo.map((photo) => photo),\r\n        //             loading: false,\r\n        //         });\r\n        //     })\r\n        //     .catch(function (error) {\r\n        //         // handle error\r\n        //         console.log(error);\r\n        //     });\r\n\r\n        // axios\r\n        //     .get(\r\n        //         `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=rabbit&per_page=24&format=json&nojsoncallback=1`\r\n        //     )\r\n        //     .then((response) => {\r\n        //         // handle success\r\n        //         this.setState({\r\n        //             rabbit: response.data.photos.photo.map((photo) => photo),\r\n        //             loading: false,\r\n        //         });\r\n        //     })\r\n        //     .catch(function (error) {\r\n        //         // handle error\r\n        //         console.log(error);\r\n        //     });\r\n    }\r\n\r\n    performSearch = (query = \"sparrow\") => {\r\n        const url = `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey.apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`;\r\n        this.setState({ loading: true });\r\n\r\n        axios\r\n            .get(url)\r\n            .then((response) => {\r\n                // handle success\r\n                console.log(response.data);\r\n                this.setState({\r\n                    data: response.data.photos.photo.map((photo) => photo),\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <HashRouter basename=\"/react-app\">\r\n                    <SearchForm search={this.performSearch} />\r\n                    <NavBar />\r\n                    {this.state.loading ? (\r\n                        <p>Loading...</p>\r\n                    ) : (\r\n                        <Switch>\r\n                            <Route\r\n                                exact\r\n                                path=\"/\"\r\n                                render={() => (\r\n                                    <PhotoContainer photo={this.state.data} />\r\n                                )}\r\n                            />\r\n                            <Route\r\n                                exact\r\n                                path=\"/cats\"\r\n                                render={() => (\r\n                                    <PhotoContainer photo={this.state.cat} />\r\n                                )}\r\n                            />\r\n                            <Route\r\n                                exact\r\n                                path=\"/dogs\"\r\n                                render={() => (\r\n                                    <PhotoContainer photo={this.state.dog} />\r\n                                )}\r\n                            />\r\n                            <Route\r\n                                exact\r\n                                path=\"/rabbit\"\r\n                                render={() => (\r\n                                    <PhotoContainer photo={this.state.rabbit} />\r\n                                )}\r\n                            />\r\n                            <Route\r\n                                exact\r\n                                path=\"/:query\"\r\n                                render={() => (\r\n                                    <PhotoContainer photo={this.state.data} />\r\n                                )}\r\n                            />\r\n                            <Route render={() => <NotFound />} />\r\n                        </Switch>\r\n                    )}\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}